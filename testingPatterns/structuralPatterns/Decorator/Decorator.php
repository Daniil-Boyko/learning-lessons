<?php

interface Component
{
    public function decorate(): string;
}

class ClassComponent implements Component
{
    public function decorate(): string
    {
        // TODO: Implement decorate() method.
        return "product";
    }
}

class InitDecorator implements Component
{
    public ?Component $component;

    public function __construct(?Component $component)
    {
        $this->component = $component;
    }

    public function decorate(): string
    {
        // TODO: Implement decorate() method.
        return $this->component->decorate();
    }
}

class Decorator1 extends InitDecorator
{
    public function decorate(): string
    {
        // TODO: Change the autogenerated stub
        return 'decorator1(' . parent::decorate() . ')';
    }
}

class Decorator2 extends InitDecorator
{
    public function decorate(): string
    {
        // TODO: Change the autogenerated stub
        return 'decorator2(' . parent::decorate() . ')';
    }
}

function decorateProduct(?Component $component)
{
    echo 'RESULT:' . $component->decorate() . PHP_EOL;
}

$initProduct = new ClassComponent();
decorateProduct($initProduct);

$decoratorObject1 = new Decorator1($initProduct);
$decoratorObject2 = new Decorator2($decoratorObject1);
decorateProduct($decoratorObject2);
