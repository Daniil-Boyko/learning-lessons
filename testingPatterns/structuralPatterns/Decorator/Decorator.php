<?php

interface Component
{
    public function decorate(): string;
}

class ClassComponent implements Component
{
    public function decorate(): string
    {
        // TODO: Implement decorate() method.
        return __CLASS__;
    }
}

class ClassDecorator implements Component
{
    public ?Component $component;
    public function __construct(?Component $component)
    {
        $this->component = $component;
    }

    public function decorate(): string
    {
        // TODO: Implement decorate() method.
        return $this->component->decorate();
    }
}

class DecoratorA extends ClassDecorator
{
    public function decorate(): string
    {
        // TODO: Change the autogenerated stub
        return __CLASS__ . parent::decorate();
    }
}

class DecoratorB extends ClassDecorator
{
    public function decorate(): string
    {
        // TODO: Change the autogenerated stub
        return __CLASS__ . parent::decorate();
    }
}

function getDecoratorsProduct(Component $component)
{
    echo 'RESULT: ' . $component->decorate() . PHP_EOL;
}

$initProduct = new ClassComponent();
getDecoratorsProduct($initProduct);

$firstDecorator = new DecoratorB($initProduct);
$secondDecorator = new DecoratorA($firstDecorator);
getDecoratorsProduct($secondDecorator);
